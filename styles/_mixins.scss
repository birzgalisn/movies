@use "./variables";

@mixin respond-to($breakpoint) {
  $raw-query: map-get(variables.$breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == "string",
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin shadow($shadow) {
  $raw-shadow: map-get(variables.$shadows, $shadow);

  @if $raw-shadow {
    $shadow-exists: if(
      type-of($raw-shadow) == "string",
      unquote($raw-shadow),
      inspect($raw-shadow)
    );

    @media #{$shadow-exists} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$shadow}`. '
         + 'Please make sure it is defined in `$shadows` map.';
  }
}

@mixin center($position) {
  position: absolute;

  @if $position == "vertical" {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == "horizontal" {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == "both" {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  } @else {
    @error 'No value found for `#{$position}`. '
         + 'Please make sure it is supported.';
  }
}
